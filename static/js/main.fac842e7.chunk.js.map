{"version":3,"sources":["Grid.js","ImageRadio.js","Settings.js","structures/structures.js","structures/StructureMenu.js","App.js","index.js"],"names":["Grid","props","handleMouseEnter","id","placingStruct","setState","shadowLocation","interactive","cellDragFunc","state","gridTable","this","grid","gridCopy","map","arr","slice","shadowGrid","cellId","split","x","parseInt","y","i","length","j","row","r","key","val","c","cellSize","boxId","value","cellColor","cellClickFunc","onMouseEnter","className","onContextMenu","React","Component","Cell","cellStyle","backgroundColor","height","width","style","onClick","onMouseDown","ev","preventDefault","ImageRadio","handleClick","onChange","content","label","classes","large","medium","small","imgSrc","src","alt","altText","solidColor","type","checked","name","Settings","handleIntervalSliderChange","newSettings","settings","interval","updateSettingsFunc","handleColorChange","color","colorOptions","hex","Modal","closeIcon","onClose","closeFunc","open","Header","Content","discrete","start","min","max","step","structures","StructureMenu","selectItem","selected","detailsOpen","selectedGrid","data","generation","nextGen","stepFunc","period","removePadding","shift","pop","forEach","componentDidMount","s","unshift","push","emptyRow","Array","fill","structure","selectItemFunc","dimensions","Button","icon","labelPosition","placeStructFunc","Icon","Math","Popup","disabled","trigger","StructureItem","toggleHover","hover","play","timer","setInterval","onMouseLeave","App","toggleAutoPlay","playing","clearInterval","openSettingsModal","settingsModalOpen","closeSettingsModal","console","log","openStructureMenu","structureMenuOpen","closeStructureMenu","openHelpModal","helpModalOpen","closeHelpModal","updateSettings","newGrid","neighours","nLiveNeighbours","cellIsPopulated","g","count","startPlaceStructure","selectedStructGrid","resetGrid","rows","cols","randomSeedGrid","floor","random","onCellClick","confirmPlaceStructure","onCellDrag","evtype","mouseButton","drawCell","startedDrag","handleKeyup","keyCode","structureFlip","shiftKey","structureRotate","dir","reverse","currGrid","col","handleResize","resizeGrid","deviceW","window","innerWidth","helpEnabled","deviceH","innerHeight","newW","newH","handleMouseDown","button","handleMouseUp","handleContextMenu","stopPropagation","document","addEventListener","componentWillUnmount","removeEventListener","onMouseMove","updateCursorXY","primary","href","target","HelpModal","Table","celled","Row","HeaderCell","Body","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.fac842e7.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Grid.css';\r\n    \r\n/* Grid displays a grid.\r\n * \r\n * Props: * interactive (bool): determines whether cells can be toggled\r\n *        * grid (matrix): grid data\r\n *        * cellClickFunc(cellId): function on cell click\r\n *        * cellDragFunc(cellId): function on cell drag\r\n *        * cellColor: hex cell color\r\n *        * cellSize: cell size in pixels\r\n *        * shadowGrid: grid of structure being placed\r\n*/\r\nclass Grid extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      // move structure shadow to mouse\r\n      shadowLocation: '0_0'\r\n    };\r\n  }\r\n  \r\n  // set shadow to cell\r\n  handleMouseEnter = (id) => {\r\n    if (this.props.placingStruct)\r\n      this.setState({ shadowLocation: id });\r\n    else if (this.props.interactive)\r\n      this.props.cellDragFunc(id, \"mouseenter\");\r\n  }\r\n\r\n  render() {\r\n    // grid to be displayed\r\n    let gridTable = null;\r\n    \r\n    // create grid\r\n    if (this.props.grid){\r\n      let gridCopy = this.props.grid.map(function(arr) { return arr.slice(); });\r\n\r\n      // add shadow of the grid that is being placed\r\n      if (this.props.shadowGrid){\r\n        let cellId = (this.state.shadowLocation.slice()).split('_');\r\n        let x = parseInt(cellId[0]);\r\n        let y = parseInt(cellId[1]);\r\n  \r\n        for (let i = 0; i < this.props.shadowGrid.length; i++){\r\n          for (let j = 0; j < this.props.shadowGrid[0].length; j++){\r\n\r\n            // only structure within the grid is shadowed\r\n            if (x + i < this.props.grid.length && y + j < this.props.grid[0].length){\r\n\r\n              // add shadow where structure is live\r\n              if (this.props.shadowGrid[i][j])\r\n                gridCopy[x + i][y + j] = 2;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      // add cells to table\r\n      gridTable = gridCopy.map((row, r) => {\r\n        return <tr key={r}>\r\n          {\r\n            row.map((val, c) => {\r\n              return <Cell\r\n                interactive={this.props.interactive}\r\n                placingStruct={this.props.placingStruct}\r\n                cellSize={this.props.cellSize}\r\n                boxId={r + '_' + c}\r\n                key={r + '_' + c}\r\n                value={val}\r\n                cellColor={this.props.cellColor}\r\n                cellClickFunc={this.props.cellClickFunc}\r\n                cellDragFunc={this.props.cellDragFunc}\r\n                onMouseEnter={this.handleMouseEnter}\r\n              />;\r\n            })\r\n          }\r\n        </tr>\r\n      })\r\n    }\r\n\r\n    return (\r\n      <table className='grid' onContextMenu={() => false}>\r\n        <tbody>\r\n          { gridTable }\r\n        </tbody>\r\n      </table>\r\n    );\r\n  }\r\n}\r\n\r\n/* Cell displays a cell.\r\n * \r\n * Props: * interactive (bool): determines whether the cell can be toggled\r\n *        * cellSize: cell size in pixels\r\n *        * boxId: id of the box. Format: r_c\r\n *        * value: value of the cell (0 (empty), 1 (live) or 2 (shadow))\r\n *        * cellColor: hex cell color\r\n *        * cellClickFunc: function to call when a cell is clicked\r\n *        * onMouseEnter: function for mouse hover\r\n*/\r\nclass Cell extends React.Component {\r\n\r\n  render() {\r\n    let cellStyle = {\r\n      backgroundColor: null,\r\n      height: this.props.cellSize ? this.props.cellSize + 'px' : '20px',\r\n      width: this.props.cellSize ? this.props.cellSize + 'px' : '20px'\r\n    }\r\n\r\n    if (this.props.value === 1 || this.props.value === true)\r\n      cellStyle.backgroundColor = this.props.cellColor;\r\n    else if (this.props.value === 2)\r\n      cellStyle.backgroundColor = '#ababab';\r\n\r\n    return (\r\n      <td\r\n        style={cellStyle}\r\n        className={this.props.interactive ? 'interactive cell' : 'cell'}\r\n        onClick={this.props.interactive || this.props.placingStruct ? () => {this.props.cellClickFunc(this.props.boxId)} : null}\r\n        onMouseEnter={() => this.props.onMouseEnter(this.props.boxId)}\r\n        onMouseDown={(ev) => {\r\n          if (this.props.interactive){\r\n            ev.preventDefault();\r\n            this.props.cellDragFunc(this.props.boxId, \"mousedown\");\r\n          }\r\n        }}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Grid;","import React from 'react';\r\nimport './ImageRadio.css';\r\n\r\n/* ImageRadio displays a custom radio with an image.\r\n * \r\n * Props: * small/medium/large: image size\r\n *        * name: radio name\r\n *        * solidColor: fills image with a solid color\r\n *        * value: radio value\r\n *        * label: radio label\r\n *        * onClick: handle radio click\r\n *        * checked: checked\r\n * \r\n * Notes: * checked should be store in the parent class' state.\r\n*/\r\nclass ImageRadio extends React.Component {\r\n  \r\n  handleClick = () => {\r\n    if (this.props.onChange) this.props.onChange(this.props.value);\r\n    else if (this.props.onClick) this.props.onClick(this.props.value);\r\n  }\r\n\r\n  render() {\r\n    // set radio classes\r\n    let classes = 'imageRadio';\r\n    if (this.props.large) classes += ' large';\r\n    else if (this.props.medium) classes += ' medium';\r\n    else if (this.props.small) classes += ' small';\r\n\r\n    let content;\r\n    if (this.props.imgSrc) content = <img className='imageRadioContent' src={this.props.imgSrc} alt={this.props.altText} />\r\n    else if (this.props.solidColor) content = <div className='imageRadioContent' style={{backgroundColor: this.props.solidColor}} />\r\n\r\n    let label;\r\n    if (this.props.label) label=<p className='imageRadioLabel'>{this.props.label}</p>\r\n    return(\r\n      <div className='imageRadioWrapper'>\r\n        <input\r\n          type='radio'\r\n          checked={this.props.checked}\r\n          name={this.props.name}\r\n          value={this.props.value}\r\n          onClick={this.handleClick}\r\n        />\r\n        <div className={classes}>\r\n          {content}\r\n          {label}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ImageRadio;","import React from 'react';\r\nimport './Settings.css';\r\nimport { Modal } from 'semantic-ui-react';\r\nimport { Slider } from 'react-semantic-ui-range';\r\n\r\nimport ImageRadio from './ImageRadio';\r\n\r\n\r\n/* Settings displays the settings modal\r\n * \r\n * Props: * settings: contains settings data from App\r\n *        * open: determines whether Settings is open\r\n *        * updateSettingsFunc: function to update settings in App state\r\n *        * closeFunc: function to close Settings\r\n*/\r\nclass Settings extends React.Component {\r\n\r\n  handleIntervalSliderChange = (val) => {\r\n    let newSettings = {...this.props.settings};\r\n    newSettings.interval = val;\r\n\r\n    this.props.updateSettingsFunc(newSettings);\r\n  }\r\n\r\n  handleColorChange = (val) => {\r\n    let newSettings = {...this.props.settings};\r\n    newSettings.color = val;\r\n\r\n    this.props.updateSettingsFunc(newSettings);\r\n  }\r\n\r\n  render() {\r\n    // color options\r\n    let colors = [\r\n      { name: 'Black', hex: '#242424' },\r\n      { name: 'Red', hex: '#e60000' },\r\n      { name: 'Orange', hex: '#ebab34' },\r\n      { name: 'Yellow', hex: '#f0e446' },\r\n      { name: 'Green', hex: '#1dc223' },\r\n      { name: 'Blue', hex: '#1555c2' },\r\n      { name: 'Purple', hex: '#9715c2' },\r\n      { name: 'Pink', hex: '#f760e3' }\r\n    ];\r\n\r\n    let colorOptions = colors.map((c, i) => {\r\n      return <ImageRadio\r\n        small\r\n        name='color'\r\n        solidColor={c.hex}\r\n        value={c.hex}\r\n        label={c.name}\r\n        onClick={this.handleColorChange}\r\n        checked={c.hex === this.props.settings.color}\r\n        key={i}\r\n      />\r\n    });\r\n\r\n    return (\r\n      <Modal\r\n        closeIcon\r\n        onClose={this.props.closeFunc}\r\n        open={this.props.open}\r\n      >\r\n        <Modal.Header>Settings</Modal.Header>\r\n        <Modal.Content>\r\n          <div className='settings-item'>\r\n            <label>Play Speed</label>\r\n            <Slider\r\n              discrete \r\n              color='blue'\r\n              settings={{\r\n                start: 1000 / this.props.settings.interval,\r\n                min: 1,\r\n                max: 5,\r\n                step: 1,\r\n                onChange: value => this.handleIntervalSliderChange(1000 / value)\r\n              }}\r\n            />\r\n          </div>\r\n          <div className='settings-item'>\r\n            <label>Color</label><br />\r\n            {colorOptions}\r\n          </div>\r\n        </Modal.Content>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Settings;","// provides preset structures in json format\r\n// grid: 0 -> empty cell\r\n//       1 -> live cell\r\n//       2 -> shadow (used in structure placement)\r\n\r\nexport const structures = [\r\n  {\r\n    \"name\": \"Blinker\",\r\n    \"dimensions\": [3, 3],\r\n    \"type\": \"oscillator\",\r\n    \"period\": 2,\r\n    \"grid\": [\r\n      [0, 0, 0],\r\n      [1, 1, 1],\r\n      [0, 0, 0]\r\n    ]\r\n  },\r\n  {\r\n    \"name\": \"Toad\",\r\n    \"dimensions\": [4, 4],\r\n    \"type\": \"oscillator\",\r\n    \"period\": 2,\r\n    \"grid\": [\r\n      [0, 0, 0, 0],\r\n      [0, 1, 1, 1],\r\n      [1, 1, 1, 0],\r\n      [0, 0, 0, 0]\r\n    ]\r\n  },\r\n  {\r\n    \"name\": \"Beacon\",\r\n    \"dimensions\": [4, 4],\r\n    \"type\": \"oscillator\",\r\n    \"period\": 2,\r\n    \"grid\": [\r\n      [1, 1, 0, 0],\r\n      [1, 1, 0, 0],\r\n      [0, 0, 1, 1],\r\n      [0, 0, 1, 1]\r\n    ]\r\n  },\r\n  {\r\n    \"name\": \"Pulsar\",\r\n    \"dimensions\": [15, 15],\r\n    \"type\": \"oscillator\",\r\n    \"period\": 3,\r\n    \"grid\": [\r\n      [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0],\r\n      [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0],\r\n      [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0],\r\n      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n      [1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1],\r\n      [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0],\r\n      [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0],\r\n      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n      [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0],\r\n      [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0],\r\n      [1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1],\r\n      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n      [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0],\r\n      [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0],\r\n      [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0]\r\n    ]\r\n  },\r\n  {\r\n    \"name\": \"Pentadecathlon\",\r\n    \"dimensions\": [9, 16],\r\n    \"type\": \"oscillator\",\r\n    \"period\": 15,\r\n    \"grid\": [\r\n      [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n      [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n      [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n      [0, 0, 0, 0, 1, 0, 0, 0, 0],\r\n      [0, 0, 0, 1, 0, 1, 0, 0, 0],\r\n      [0, 0, 1, 0, 0, 0, 1, 0, 0],\r\n      [0, 0, 1, 0, 0, 0, 1, 0, 0],\r\n      [0, 0, 1, 0, 0, 0, 1, 0, 0],\r\n      [0, 0, 1, 0, 0, 0, 1, 0, 0],\r\n      [0, 0, 1, 0, 0, 0, 1, 0, 0],\r\n      [0, 0, 1, 0, 0, 0, 1, 0, 0],\r\n      [0, 0, 0, 1, 0, 1, 0, 0, 0],\r\n      [0, 0, 0, 0, 1, 0, 0, 0, 0],\r\n      [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n      [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n      [0, 0, 0, 0, 0, 0, 0, 0, 0]\r\n    ]\r\n  },\r\n  {\r\n    \"name\": \"Glider\",\r\n    \"dimensions\": [3, 3],\r\n    \"type\": \"spaceship\",\r\n    \"grid\": [\r\n      [0, 0, 1],\r\n      [1, 0, 1],\r\n      [0, 1, 1]\r\n    ]\r\n  },\r\n  {\r\n    \"name\": \"Medium Spaceship\",\r\n    \"dimensions\": [5, 4],\r\n    \"type\": \"spaceship\",\r\n    \"grid\": [\r\n      [1, 0, 0, 1, 0],\r\n      [0, 0, 0, 0, 1],\r\n      [1, 0, 0, 0, 1],\r\n      [0, 1, 1, 1, 1]\r\n    ]\r\n  },\r\n  {\r\n    \"name\": \"Gosper Glider Gun\",\r\n    \"dimensions\": [36, 9],\r\n    \"type\": \"gun\",\r\n    \"period\": 30,\r\n    \"grid\": [\r\n      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1],\r\n      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1],\r\n      [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n      [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\r\n    ]\r\n  },\r\n  {\r\n    \"name\": \"Diamond Ring\",\r\n    \"dimensions\": [13, 13],\r\n    \"type\": \"oscillator\",\r\n    \"period\": 3,\r\n    \"grid\": [\r\n      [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0],\r\n      [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0],\r\n      [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0],\r\n      [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0],\r\n      [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0],\r\n      [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0],\r\n      [1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1],\r\n      [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0],\r\n      [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0],\r\n      [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0],\r\n      [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0],\r\n      [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0],\r\n      [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]\r\n    ]\r\n  },\r\n  {\r\n    \"name\": \"Glasses\",\r\n    \"dimensions\": [18, 11],\r\n    \"type\": \"oscillator\",\r\n    \"period\": 2,\r\n    \"grid\": [\r\n      [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0],\r\n      [0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0],\r\n      [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0],\r\n      [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0],\r\n      [1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1],\r\n      [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0],\r\n      [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0],\r\n      [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0],\r\n      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n      [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0],\r\n      [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0]\r\n    ]\r\n  },\r\n  {\r\n    \"name\": \"Turtle\",\r\n    \"dimensions\": [12, 10],\r\n    \"type\": \"spaceship\",\r\n    \"period\": 3,\r\n    \"grid\": [\r\n      [0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1],\r\n      [0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1],\r\n      [0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0],\r\n      [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0],\r\n      [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0],\r\n      [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0],\r\n      [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0],\r\n      [0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0],\r\n      [0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1],\r\n      [0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1]\r\n    ]\r\n  },\r\n  {\r\n    \"name\": \"Canada Goose\",\r\n    \"dimensions\": [13, 12],\r\n    \"type\": \"spaceship\",\r\n    \"period\": 4,\r\n    \"grid\": [\r\n      [1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n      [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0],\r\n      [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1],\r\n      [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0],\r\n      [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0],\r\n      [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0],\r\n      [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0],\r\n      [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0],\r\n      [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0],\r\n      [0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0],\r\n      [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n      [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]\r\n    ]\r\n  }\r\n]","import React from 'react';\r\nimport { Modal, Button, Popup, Icon } from 'semantic-ui-react';\r\nimport './StructureMenu.css';\r\n\r\nimport { structures as data } from './structures';\r\nimport Grid from './../Grid';\r\n\r\n/* StructureMenu displays the structure menu.\r\n * \r\n * Props: * open: whether the menu is visible\r\n *        * stepFunc: function to step a grid forward\r\n *        * closeFunc: function to close the menu\r\n *        * placeStructFunc: function to start placing a structure\r\n*/\r\nclass StructureMenu extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      selected: 0, // id of selected structure\r\n      detailsOpen: false, // details pane open?\r\n      selectedGrid: data[0].grid, // grid data for selected structure\r\n      generation: 0 // generation of the structure in the details pane\r\n    }\r\n  }\r\n\r\n  // selects a new item to view in the details pane\r\n  selectItem = (i) => {\r\n    this.setState({\r\n      selected: i,\r\n      detailsOpen: true,\r\n      selectedGrid: data[i].grid,\r\n      generation: 0\r\n    });\r\n  }\r\n\r\n  // steps a grid forward\r\n  nextGen = () => {\r\n    this.setState({\r\n      selectedGrid: this.props.stepFunc(this.state.selectedGrid),\r\n      generation: (this.state.generation + 1) % data[this.state.selected].period\r\n    });\r\n  }\r\n\r\n  // returns the grid without the padding around the structure\r\n  removePadding = (grid) => {\r\n    let gridCopy = grid.map(function(arr) { return arr.slice(); });\r\n\r\n    // remove empty first and last rows\r\n    gridCopy.shift();\r\n    gridCopy.pop();\r\n\r\n    // remove empty units at the beginning and end of each row\r\n    gridCopy.forEach(row => {\r\n      row.shift();\r\n      row.pop();\r\n    });\r\n\r\n    return gridCopy;\r\n  }\r\n\r\n  componentDidMount = () => {\r\n\r\n    // provide one unit of padding around the structure\r\n    data.forEach(s => {\r\n      // add one empty unit at the beginning and end of each row\r\n      s.grid.forEach(row => {\r\n        row.unshift(0);\r\n        row.push(0);\r\n      });\r\n    \r\n      // add empty first and last rows\r\n      let emptyRow = new Array(s.grid[0].length).fill(0);\r\n      s.grid.unshift(emptyRow);\r\n      s.grid.push(emptyRow);\r\n    });\r\n  }\r\n\r\n  render() {\r\n    // array of structures to display\r\n    let structures = data.map((s, i) => {\r\n      return <StructureItem\r\n        key={i}\r\n        i={i}\r\n        structure={s}\r\n        stepFunc={this.props.stepFunc}\r\n        selectItemFunc={this.selectItem}\r\n      />\r\n    });\r\n\r\n    return (\r\n      <Modal\r\n        closeIcon\r\n        onClose={this.props.closeFunc}\r\n        open={this.props.open}\r\n      >\r\n        <Modal.Header>Structures</Modal.Header>\r\n        <Modal.Content>\r\n          <div id='modal-content'>\r\n            {/* main panel */}\r\n            <div id='structure-list' className={!this.state.detailsOpen ? 'visible' : null}>\r\n              {structures}\r\n            </div>\r\n\r\n            {/* detail panel */}\r\n            <div id='structure-details' className={this.state.detailsOpen ? 'visible' : null}>\r\n              <div>\r\n                <h3>{data[this.state.selected].name}</h3>\r\n                <p>Dimensions: {data[this.state.selected].dimensions[0]}x{data[this.state.selected].dimensions[1]}</p>\r\n                <p>Period: {data[this.state.selected].period}</p>\r\n                <p>Type: {data[this.state.selected].type}</p>\r\n                <Button icon\r\n                  labelPosition='left'\r\n                  onClick={() => this.props.placeStructFunc(this.removePadding(this.state.selectedGrid))}\r\n                >\r\n                  Place this structure!\r\n                  <Icon name='paint brush' />\r\n                </Button>\r\n                <Button className='back-button' onClick={() => this.setState({ detailsOpen: false })}>Back</Button>\r\n              </div>\r\n              <div id='structure-grid'>\r\n                <Grid\r\n                  grid={this.state.selectedGrid}\r\n                  cellSize={300 / Math.max(this.state.selectedGrid.length, this.state.selectedGrid[0].length)}\r\n                  cellColor={'#616161'}\r\n                />\r\n                <p>Generation {this.state.generation}</p>\r\n                <Popup\r\n                  content='Animation for spaceships is currently unavailable'\r\n                  disabled={data[this.state.selected].type !== 'spaceship'}\r\n                  trigger={\r\n                    <span><Button\r\n                      onClick={this.nextGen}\r\n                      disabled={data[this.state.selected].type === 'spaceship'}\r\n                    >Step</Button></span>\r\n                  }\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Modal.Content>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\n/* StructureItem displays a single structure in the structure menu.\r\n * \r\n * Props: * i: id of structure\r\n *        * structure: structure data\r\n *        * stepFunc: function to step a grid forward\r\n *        * selectItemFunc: selects current grid to view in detail panel\r\n*/\r\nclass StructureItem extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      hover: false,\r\n      structure: this.props.structure,\r\n      grid: this.props.structure.grid,\r\n      timer: setInterval(this.play, 1000)\r\n    }\r\n  }\r\n\r\n  toggleHover = () => { this.setState({ hover: !this.state.hover }) }\r\n\r\n  // steps the grid forward one\r\n  play = () => {\r\n    if (this.state.hover && this.props.structure.type !== 'spaceship')\r\n      this.setState({ grid: this.props.stepFunc(this.state.grid) })\r\n  }\r\n\r\n  render() {\r\n    // different cell sizes for different grid sizes\r\n    let gridSize = Math.max(this.state.grid.length, this.state.grid[0].length);\r\n    let cellSize = (150 / gridSize);\r\n\r\n    return (\r\n      <div\r\n        className='structure-item'\r\n        onMouseEnter={this.toggleHover}\r\n        onMouseLeave={this.toggleHover}\r\n        onClick={() => this.props.selectItemFunc(this.props.i)}\r\n      >\r\n        <p>{this.props.structure.name}</p>\r\n        <Grid\r\n          grid={this.state.grid}\r\n          cellColor='#616161'\r\n          cellSize={cellSize}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StructureMenu;","import React from 'react';\r\nimport './App.css';\r\nimport  { Button, Icon, Modal, Table } from 'semantic-ui-react';\r\n\r\nimport Grid from './Grid';\r\nimport Settings from './Settings';\r\nimport StructureMenu from './structures/StructureMenu';\r\n\r\nconst deviceBreakpoint = 700;\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // initial number of rows/cols. Will be updated in componentDidMount()\r\n    let initialRows = 5;\r\n    let initialCols = 5;\r\n\r\n    this.timer = null; // timer for auto-playing\r\n    this.cellSize = 20; // cell size in px\r\n\r\n    this.mouseButton = -1;\r\n    this.startedDrag = null;\r\n\r\n    this.state = {\r\n      // main grid\r\n      grid: (new Array(initialRows)).fill().map(() => { return new Array(initialCols).fill(0) }),\r\n      playing: false,\r\n      generation: 0,\r\n\r\n      settings: {\r\n        interval: 500, // auto-play interval in ms\r\n        color: '#242424', // default cell color\r\n      },\r\n\r\n      // grid of the structure that is being placed\r\n      selectedStructGrid: null,\r\n\r\n      // modals\r\n      settingsModalOpen: false,\r\n      structureMenuOpen: false,\r\n      helpModalOpen: false,\r\n\r\n      // shows help modal (keyboard shortcuts) for large devices only\r\n      helpEnabled: window.innerWidth > deviceBreakpoint\r\n    }\r\n  }\r\n\r\n  toggleAutoPlay = () => {\r\n    if (this.state.playing){ clearInterval(this.timer) }\r\n    else { this.timer = setInterval(this.play, this.state.settings.interval) }\r\n    this.setState({ playing: !this.state.playing });\r\n  }\r\n\r\n  openSettingsModal = () => { this.setState({ settingsModalOpen: true }) }\r\n  closeSettingsModal = () => {console.log(\"close\"); this.setState({ settingsModalOpen: false }) }\r\n\r\n  openStructureMenu = () => { this.setState({ structureMenuOpen: true }) }\r\n  closeStructureMenu = () => { this.setState({ structureMenuOpen: false }) }\r\n\r\n  openHelpModal = () => { this.setState({ helpModalOpen: true }) }\r\n  closeHelpModal = () => { this.setState({ helpModalOpen: false }) }\r\n\r\n  updateSettings = (newSettings) => {\r\n    this.setState({ settings: newSettings });\r\n  }\r\n\r\n  // steps one generation on the main grid\r\n  play = () => {\r\n    let newGrid = this.step(this.state.grid);\r\n\r\n    // update grid and increment generation counter\r\n    this.setState({\r\n      grid: newGrid,\r\n      generation: this.state.generation + 1\r\n    });\r\n  }\r\n\r\n  // returns grid of the next generation\r\n  step = (grid) => {\r\n    // work on a copy of the grid\r\n    let newGrid = grid.map(function(arr) { return arr.slice(); });\r\n    for (let r = 0; r < grid.length; r++){\r\n      for (let c = 0; c < grid[0].length; c++){\r\n        let neighours = this.nLiveNeighbours(r, c, grid);\r\n        if (this.cellIsPopulated(r, c, grid)){\r\n          // a cell dies if there are less than 2 or more than 3 neighbours\r\n          if (neighours < 2 || neighours > 3) newGrid[r][c] = 0;\r\n        }\r\n        // an empty cell becomes a live cell if there are exactly 3 neighbours\r\n        else if (neighours === 3) newGrid[r][c] = 1;\r\n      }\r\n    }\r\n\r\n    return newGrid;\r\n  }\r\n\r\n  // returns the number of living cells neighbouring the cell at row r, column c in grid g\r\n  nLiveNeighbours = (r, c, g) => {\r\n    let count = 0;\r\n    if (this.cellIsPopulated(r - 1, c - 1, g)) count++;\r\n    if (this.cellIsPopulated(r - 1, c, g)) count++;\r\n    if (this.cellIsPopulated(r - 1, c + 1, g)) count++;\r\n    if (this.cellIsPopulated(r, c - 1, g)) count++;\r\n    if (this.cellIsPopulated(r, c + 1, g)) count++;\r\n    if (this.cellIsPopulated(r + 1, c - 1, g)) count++;\r\n    if (this.cellIsPopulated(r + 1, c, g)) count++;\r\n    if (this.cellIsPopulated(r + 1, c + 1, g)) count++;\r\n    return count;\r\n  }\r\n\r\n  cellIsPopulated = (r, c, grid) => { return (r >= 0 && c >= 0 && r < grid.length && c < grid[0].length && grid[r][c]) }\r\n\r\n  // close structure menu and select structure to place\r\n  startPlaceStructure = (grid) => {\r\n    this.setState({\r\n      structureMenuOpen: false,\r\n      selectedStructGrid: grid\r\n    });\r\n  }\r\n\r\n  // clears the main grid\r\n  resetGrid = () => {\r\n    let rows = this.state.grid.length;\r\n    let cols = this.state.grid[0].length;\r\n    let grid = (new Array(rows)).fill().map(() => { return new Array(cols).fill(0) });\r\n    \r\n    this.setState({\r\n      grid: grid,\r\n      generation: 0\r\n    });\r\n  }\r\n\r\n  // fills each cell in the main grid with a random on/off state\r\n  randomSeedGrid = () => {\r\n    let rows = this.state.grid.length;\r\n    let cols = this.state.grid[0].length;\r\n    let grid = (new Array(rows)).fill().map(() => { return new Array(cols).fill(0) });\r\n\r\n    for (let i = 0; i < rows; i++)\r\n      for (let j = 0; j < cols; j++)\r\n        if (Math.floor(Math.random() * 5) === 1)\r\n          grid[i][j] = 1;\r\n    \r\n    this.setState({\r\n      grid: grid,\r\n      generation: 0\r\n    });\r\n  }\r\n  \r\n  // determines what happens when a cell is clicked\r\n  onCellClick = (id) => {\r\n    if (this.state.selectedStructGrid)\r\n      this.confirmPlaceStructure(id);\r\n  }\r\n\r\n  // determines what happens when the mouse drags across the grid\r\n  // evtype: \"mouseenter\" or \"mousedown\"\r\n  onCellDrag = (id, evtype) => {\r\n    if (this.mouseButton === 0)\r\n      this.drawCell(id, 1);\r\n    else if (this.mouseButton === 2)\r\n      this.drawCell(id, 0);\r\n\r\n    // mouse button has not yet been updated; store id in variable to access when it is updated\r\n    else if (!this.startedDrag && evtype === \"mousedown\") {\r\n      this.startedDrag = id;\r\n    }\r\n  }\r\n\r\n  // places the structure on the grid\r\n  confirmPlaceStructure = (id) => {\r\n    id = id.split('_');\r\n    let x = parseInt(id[0]);\r\n    let y = parseInt(id[1]);\r\n    let gridCopy = this.state.grid.map(function(arr) { return arr.slice(); });\r\n\r\n    for (let i = 0; i < this.state.selectedStructGrid.length; i++){\r\n      for (let j = 0; j < this.state.selectedStructGrid[0].length; j++){\r\n\r\n        // only structure within the grid is placed\r\n        if (x + i < gridCopy.length && y + j < gridCopy[0].length){\r\n          \r\n          // edit grid only if structure has a live cell at that position\r\n          if (this.state.selectedStructGrid[i][j])\r\n            gridCopy[x + i][y + j] = this.state.selectedStructGrid[i][j];\r\n        }\r\n      }\r\n    }\r\n\r\n    this.setState({\r\n      grid: gridCopy,\r\n      selectedStructGrid: null\r\n    });\r\n  }\r\n\r\n  // updates a cell with a new value\r\n  drawCell = (id, val) => {\r\n    if (!this.state.playing){\r\n      id = id.split('_');\r\n      let r = id[0];\r\n      let c = id[1];\r\n  \r\n      let grid = this.state.grid.map(function(arr) { return arr.slice(); });\r\n  \r\n      grid[r][c] = val;\r\n  \r\n      this.setState({ grid: grid });\r\n    }\r\n  }\r\n\r\n  handleKeyup = (ev) => {\r\n    if (this.state.selectedStructGrid){\r\n      // escape: cancels structure placement\r\n      if (ev.keyCode === 27){\r\n        if (this.state.selectedStructGrid !== null)\r\n          this.setState({ selectedStructGrid: null });\r\n      }\r\n  \r\n      // f: flips structure\r\n      if (ev.keyCode === 70){\r\n        // f: horizontal flip\r\n        // shift-f: vertical flip\r\n        this.structureFlip(ev.shiftKey ? 1 : 0);\r\n      }\r\n\r\n      // a / left-arrow: rotates structure counter-clockwise\r\n      if (ev.keyCode === 65 || ev.keyCode === 37){\r\n        this.structureRotate(-1);\r\n      }\r\n\r\n      // d / right-arrow: rotates structure clockwise\r\n      if (ev.keyCode === 68 || ev.keyCode === 39){\r\n        this.structureRotate(1);\r\n      }\r\n    }\r\n  }\r\n\r\n  // flips the selected structure\r\n  // notes: dir = 0 flips horizontally\r\n  //        dir = 1 flips vertically\r\n  structureFlip = (dir) => {\r\n    let gridCopy = this.state.selectedStructGrid.map(function(arr) { return arr.slice(); });\r\n\r\n    // horizontal flip\r\n    if (dir === 0){\r\n      gridCopy.forEach(row => row.reverse());\r\n    }\r\n    // vertical flip\r\n    else if (dir === 1){\r\n      gridCopy.reverse();\r\n    }\r\n\r\n    this.setState({ selectedStructGrid: gridCopy });\r\n  }\r\n\r\n  // rotates the selected structure\r\n  // notes: if dir < 0 then structure will rotate counter-clockwise\r\n  //        if dir > 0 then structure will rotate clockwise\r\n  structureRotate = (dir) => {\r\n    let currGrid = this.state.selectedStructGrid;\r\n    // newGrid is currGrid reflected across the diagonal from the top left to the bottom right\r\n    //   the ith column in currGrid is the ith row in newGrid.\r\n    let newGrid = currGrid[0].map((col, i) => currGrid.map(row => row[i]));\r\n\r\n    // flip vertically for counter-clockwise rotation\r\n    if (dir < 0)\r\n      newGrid.reverse();\r\n    // flip horizontally for clockwise rotation\r\n    else if (dir > 0)\r\n      newGrid.forEach(row => row.reverse());\r\n\r\n    // update grid\r\n    this.setState({ selectedStructGrid: newGrid });\r\n  }\r\n  \r\n  handleResize = (ev) => {\r\n    this.resizeGrid();\r\n\r\n    let deviceW = window.innerWidth;\r\n    if (deviceW < deviceBreakpoint && this.state.helpEnabled){\r\n      this.setState({\r\n        helpModalOpen: false,\r\n        helpEnabled: false\r\n      });\r\n    }\r\n    else if (deviceW >= deviceBreakpoint && !this.state.helpEnabled){\r\n      this.setState({ helpEnabled: true });\r\n    }\r\n  }\r\n\r\n  // resizes the grid to match the device\r\n  resizeGrid = () => {\r\n    let deviceW = window.innerWidth;\r\n    let deviceH = window.innerHeight;\r\n\r\n    // new width and height of grid in cells\r\n    let newW = parseInt((deviceW * 0.8) / this.cellSize);\r\n    // 500px is toolbar wrap point; TODO: use flexbox or other instead of hardcoding breakpoint\r\n    let newH = deviceW < 500 ? parseInt((deviceH - 230) / this.cellSize)\r\n                             : parseInt((deviceH - 200) / this.cellSize);\r\n\r\n    // width and height must be at least 5\r\n    if (newW < 5) newW = 5;\r\n    if (newH < 5) newH = 5;\r\n\r\n    // cap width and height at 64 and 32\r\n    if (newW > 64) newW = 64;\r\n    if (newH > 32) newH = 32;\r\n    \r\n    let gridCopy = this.state.grid.map(function(arr) { return arr.slice(); });\r\n\r\n    // pop rows until the new height is satisfied\r\n    if (newH < gridCopy.length){\r\n      while (gridCopy.length > newH)\r\n        gridCopy.pop();\r\n    }\r\n    // append empty rows until the new width is satisfied\r\n    else if (newH > gridCopy.length) {\r\n      while (gridCopy.length < newH){\r\n        let emptyRow = new Array(gridCopy[0].length).fill(0);\r\n        gridCopy.push(emptyRow);\r\n      }\r\n    }\r\n\r\n    // pop elements from each row until the new width is satisfied\r\n    if (newW < gridCopy[0].length){\r\n      gridCopy.forEach(row => {\r\n        while (row.length > newW)\r\n          row.pop();\r\n      });\r\n    }\r\n    // append 0s to each row until the new width is satisfied\r\n    else if (newW > gridCopy[0].length){\r\n      gridCopy.forEach(row => {\r\n        while (row.length < newW)\r\n          row.push(0);\r\n      });\r\n    }\r\n\r\n    this.setState({ grid: gridCopy });\r\n  }\r\n\r\n  handleMouseDown = (ev) => {\r\n    this.mouseButton = ev.button;\r\n\r\n    // mouse button is updated after event fires. Call function to draw on the first cell\r\n    if (this.startedDrag){\r\n      // draw appropriate value to cell\r\n      if (this.mouseButton === 0)\r\n        this.drawCell(this.startedDrag, 1);\r\n      else if (this.mouseButton === 2)\r\n        this.drawCell(this.startedDrag, 0);\r\n      \r\n      // reset variable\r\n      this.startedDrag = null;\r\n    }\r\n  }\r\n\r\n  handleMouseUp = (ev) => { this.mouseButton = -1 }\r\n  \r\n  handleContextMenu = (ev) => {\r\n    ev.preventDefault();\r\n    ev.stopPropagation();\r\n    return false;\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    document.addEventListener('keyup', this.handleKeyup, false);\r\n    document.addEventListener('mousedown', this.handleMouseDown, false);\r\n    document.addEventListener('mouseup', this.handleMouseUp, false);\r\n    window.addEventListener('resize', this.handleResize, false);\r\n    document.addEventListener('contextmenu', this.handleContextMenu, false);\r\n\r\n    // resize grid to fit device\r\n    this.resizeGrid();\r\n  }\r\n\r\n  componentWillUnmount = () => {\r\n    document.removeEventListener('keyup', this.handleKeyup, false);\r\n    document.removeEventListener('mousedown', this.handleMouseDown, false);\r\n    document.removeEventListener('mouseup', this.handleMouseUp, false);\r\n    window.removeEventListener('resize', this.handleResize, false);\r\n    document.removeEventListener('contextmenu', this.handleContextMenu , false);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='app' onMouseMove={this.updateCursorXY}>\r\n        <div className='title'>Game of Life</div>\r\n        <Grid\r\n          // grid is interactive unless autoplaying or placing structure\r\n          interactive={!this.state.playing && !this.state.selectedStructGrid}\r\n          placingStruct={this.state.selectedStructGrid != null}\r\n          grid={this.state.grid}\r\n          cellClickFunc={this.onCellClick}\r\n          cellDragFunc={this.onCellDrag}\r\n          cellColor={this.state.settings.color}\r\n          cellSize={this.cellSize}\r\n          shadowGrid={this.state.selectedStructGrid}\r\n        />\r\n        <p>Generation: {this.state.generation}</p>\r\n\r\n        {/* bottom action bar */}\r\n        <div className='button-container'>\r\n          <Button\r\n            primary icon\r\n            onClick={this.toggleAutoPlay}\r\n            disabled={this.state.selectedStructGrid !== null}\r\n          >\r\n            <Icon name={this.state.playing ? 'pause' : 'play'} />\r\n          </Button>\r\n          <Button onClick={this.play} disabled={this.state.playing || this.state.selectedStructGrid !== null}>Step</Button>\r\n          <Button icon onClick={this.openStructureMenu} disabled={this.state.playing || this.state.selectedStructGrid !== null}>\r\n            <Icon name='folder outline' />\r\n          </Button>\r\n          <Button onClick={this.resetGrid} disabled={this.state.playing || this.state.selectedStructGrid !== null}>Reset Grid</Button>\r\n          <Button onClick={this.randomSeedGrid} disabled={this.state.playing || this.state.selectedStructGrid !== null}>Seed</Button>\r\n          <Button icon onClick={this.openSettingsModal} disabled={this.state.playing || this.state.selectedStructGrid !== null}>\r\n            <Icon name='setting' />\r\n          </Button>\r\n          {\r\n            this.state.helpEnabled\r\n            ? <Button icon onClick={this.openHelpModal} disabled={this.state.playing || this.state.selectedStructGrid !== null}>\r\n                <Icon name='question' />\r\n              </Button>\r\n            : null\r\n          }\r\n          \r\n        </div>\r\n\r\n        {/* settings modal */}\r\n        <Settings\r\n          settings={this.state.settings}\r\n          open={this.state.settingsModalOpen}\r\n          updateSettingsFunc={this.updateSettings}\r\n          closeFunc={this.closeSettingsModal}\r\n        />\r\n\r\n        {/* structure menu */}\r\n        <StructureMenu\r\n          open={this.state.structureMenuOpen}\r\n          stepFunc={this.step}\r\n          closeFunc={this.closeStructureMenu}\r\n          placeStructFunc={this.startPlaceStructure}\r\n        />\r\n\r\n        {/* help modal */}\r\n        <HelpModal\r\n          open={this.state.helpModalOpen}\r\n          closeFunc={this.closeHelpModal}\r\n        />\r\n\r\n        <span className=\"github-link\"><a href=\"https://github.com/emily-emily/game-of-life-react\" target=\"_blank\">\r\n          <i className=\"fab fa-github\"></i> · Emily Yu\r\n        </a></span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass HelpModal extends React.Component {\r\n  render(){\r\n    return (\r\n      <Modal\r\n        closeIcon\r\n        onClose={this.props.closeFunc}\r\n        open={this.props.open}\r\n      >\r\n        <Modal.Header>Help</Modal.Header>\r\n        <Modal.Content>\r\n          <div id='help-content'>\r\n            <Table celled>\r\n              <Table.Header>\r\n                <Table.Row>\r\n                  <Table.HeaderCell>Key</Table.HeaderCell>\r\n                  <Table.HeaderCell>Action</Table.HeaderCell>\r\n                </Table.Row>\r\n              </Table.Header>\r\n\r\n              <Table.Body>\r\n                <Table.Row>\r\n                  <Table.Cell>Right-click/drag</Table.Cell>\r\n                  <Table.Cell>Draw living cell</Table.Cell>\r\n                </Table.Row>\r\n                <Table.Row>\r\n                  <Table.Cell>Left-click/drag</Table.Cell>\r\n                  <Table.Cell>Erase living cell</Table.Cell>\r\n                </Table.Row>\r\n                <Table.Row>\r\n                  <Table.Cell>esc</Table.Cell>\r\n                  <Table.Cell>Cancel structure placement</Table.Cell>\r\n                </Table.Row>\r\n                <Table.Row>\r\n                  <Table.Cell>f</Table.Cell>\r\n                  <Table.Cell>Flip structure horizontally</Table.Cell>\r\n                </Table.Row>\r\n                <Table.Row>\r\n                  <Table.Cell>shift f</Table.Cell>\r\n                  <Table.Cell>Flip structure vertically</Table.Cell>\r\n                </Table.Row>\r\n                <Table.Row>\r\n                  <Table.Cell>a / left-arrow</Table.Cell>\r\n                  <Table.Cell>Rotate structure counter-clockwise</Table.Cell>\r\n                </Table.Row>\r\n                <Table.Row>\r\n                  <Table.Cell>d / right-arrow</Table.Cell>\r\n                  <Table.Cell>Rotate structure clockwise</Table.Cell>\r\n                </Table.Row>\r\n              </Table.Body>\r\n            </Table>\r\n          </div>\r\n        </Modal.Content>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}